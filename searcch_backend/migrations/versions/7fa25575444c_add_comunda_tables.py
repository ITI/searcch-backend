"""add_comunda_tables

Revision ID: 7fa25575444c
Revises: 43d79542de81
Create Date: 2022-11-11 20:13:48.660135

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '7fa25575444c'
down_revision = '43d79542de81'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    for new_value in ("publication", "presentation", "dag", "argus", "pcap", "netflow", "flowtools", "flowride", "fsdb", "csv", "custom"):
        try:
            with op.get_context().autocommit_block():
                op.execute(
                    "alter type artifact_enum add value '%s'" % (new_value,))
        except:
            pass
    # op.create_table('dua',
    #     sa.Column('collection', sa.String(length=1024), nullable=False),
    #     sa.Column('provider', sa.String(length=1024), nullable=False),
    #     sa.Column('dua_url', sa.Text(), nullable=False),
    #     sa.PrimaryKeyConstraint('collection', 'provider'),
    #     sa.UniqueConstraint('collection', 'provider')
    # )
    # op.drop_constraint('artifact_groups_id_next_version_key', 'artifact_groups', type_='unique')
    # access_ne = postgresql.ENUM(
    #     'download', 'onsite', 'cloud',
    #     name='access_enum')
    # access_ne.create(op.get_bind())
    # anon_ne = postgresql.ENUM(
    #     'cryptopan-full', 'cryptopan-host', 'remove-host', 'none', 'custom',
    #     name='anon_enum')
    # anon_ne.create(op.get_bind())
    # op.add_column('artifacts', sa.Column('access', sa.Enum('download', 'onsite', 'cloud', name='access_enum'), nullable=True))
    # op.add_column('artifacts', sa.Column('anonymization', sa.Enum('cryptopan-full', 'cryptopan-host', 'remove-host', 'none', 'custom', name='anon_enum'), nullable=True))
    # op.add_column('artifacts', sa.Column('collection', sa.String(length=1024), nullable=False))
    # op.add_column('artifacts', sa.Column('fromtime', sa.DateTime(), nullable=True))
    # op.add_column('artifacts', sa.Column('provider', sa.String(length=1024), nullable=False))
    # op.add_column('artifacts', sa.Column('size', sa.BigInteger(), nullable=True))
    # op.add_column('artifacts', sa.Column('totime', sa.DateTime(), nullable=True))
    # op.drop_index('org_idx', table_name='organizations')
    # op.drop_index('person_idx', table_name='persons')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index('person_idx', 'persons', ['person_tsv'], unique=False)
    op.create_index('org_idx', 'organizations', ['org_tsv'], unique=False)
    op.drop_column('artifacts', 'totime')
    op.drop_column('artifacts', 'size')
    op.drop_column('artifacts', 'provider')
    op.drop_column('artifacts', 'fromtime')
    op.drop_column('artifacts', 'collection')
    op.drop_column('artifacts', 'anonymization')
    op.drop_column('artifacts', 'access')
    op.create_unique_constraint('artifact_groups_id_next_version_key', 'artifact_groups', ['id', 'next_version'])
    op.drop_table('dua')
    # ### end Alembic commands ###
